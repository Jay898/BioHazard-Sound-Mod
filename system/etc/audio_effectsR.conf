# List of effect libraries to load. Each library element must contain a "path" element
# giving the full path of the library .so file.
#    libraries {
#        <lib name> {
#          path <lib path>
#        }
#    }

libraries {
  v4a_fx {
    path /system/lib/soundfx/libv4a_fx_ics.so
  }
  dsp {
    path /system/lib/soundfx/libcyanogen-dsp.so
  }
  dsp_compress {
    path /system/lib/soundfx/libqcompostprocbundle.so
  }
  audio_pre_processing {
    path /system/lib/soundfx/libqcomvoiceprocessing.so
  }
  offload {
    path /system/lib/soundfx/libaudioeffectoffload.so
  }
  offload_visualizer {
    path /system/lib/soundfx/libqcomvisualizer.so
  }
  bundle {
    path /system/lib/soundfx/libbundlewrapper.so
  }
  reverb {
    path /system/lib/soundfx/libreverbwrapper.so
  }
  visualizer {
    path /system/lib/soundfx/libvisualizer.so
  }
  visualizer_hw {
    path /system/lib/soundfx/libqcomvisualizer.so
  }
  downmix {
    path /system/lib/soundfx/libdownmix.so
  }
  ibanezsevendseehx {
    path /system/lib/soundfx/libibanezsevendseehx.so
  }
  loudness_enhancer {
    path /system/lib/soundfx/libldnhncr.so
  }
  bass_enhancement {
    path /system/lib/soundfx/libbeatsbass.so
  }
  soundaura {
    path /system/lib/soundfx/libsoundaurawrapper.so
  }
  mixclearaudio+ {
    path /system/lib/soundfx/libmixclearaudio+.so
  }
  preeffect {
    path /system/lib/soundfx/libpreeffectwrapper.so
  }
  posteffect {
    path /system/lib/soundfx/libposteffectwrapper.so
  }
  xloudwrapper {
	path /system/lib/soundfx/libxloudwrapper.so
  }
  clearaudio {
	path /system/lib/soundfx/libclearaudiowrapper.so
  }
  SRS {
    path /system/lib/soundfx/libsrsfx.so
  }
  output_pre_processing {
    path /vendor/lib/liblvvetx_3.27.02.so
  }
  output_session_processing {
    path /vendor/lib/liblvverx_3.27.02.so
  }
  pre_processing {
    path /system/lib/soundfx/libaudiopreprocessing.so
  }
  normalizer {
    path /system/lib/soundfx/liblge_soundnormalizerV2.so
  }
  spectrum {
    path /system/lib/soundfx/libspectrum.so
  }
  fmas {
    path /system/lib/soundfx/libfmas.so
  }
  vpt51 {
    path /system/lib/soundfx/libvpt51wrapper.so
  }
  huawei_pre_processing {
    path /system/lib/soundfx/libhuaweiaudiopreprocessing.so
  }
  qcom_pre_processing {
    path /system/lib/soundfx/libqcomvoiceprocessing.so
  }
  dirac {
    path /system/lib/soundfx/libdirac.so
  }
   qcom_pre_processing {
    path /system/lib/soundfx/libqcomvoiceprocessing.so
  }
   soundalive {
    path /system/lib/libaudiosa.so
  }
   soundalive_sec {
    path /system/lib/soundfx/libaudiosa_sec.so
  }
  dap {
    path /system/lib/soundfx/libswdap-mod.so
  }
  ds_hw {
    path /system/vendor/lib/soundfx/libhwdap.so
  }
  ds_sw {
    path /system/vendor/lib/soundfx/libswdap.so
  }
  maxxaudio3 {
    path /system/lib/soundfx/libmaxxeffect-cembedded.so
  }
   qcreverb {
    path /vendor/lib/soundfx/libqcreverb.so
  }  
   qcvirt {
    path /vendor/lib/soundfx/libqcvirt.so
  }
   qcbassboost {
    path /vendor/lib/soundfx/libqcbassboost.so
  }
  sonyeffect_sw {
    path /system/lib/soundfx/libsonysweffect.so
  }
  sonyeffect_hw {
    path /system/lib/soundfx/libsonypostprocbundle.so
  }
  proxy {
    path /system/lib/soundfx/libeffectproxy.so
  }
}

# Default pre-processing library. Add to audio_effect.conf "libraries" section if
# audio HAL implements support for default software audio pre-processing effects
#
#  pre_processing {
#    path /system/lib/soundfx/libaudiopreprocessing.so
#  }

# list of effects to load. Each effect element must contain a "library" and a "uuid" element.
# The value of the "library" element must correspond to the name of one library element in the
# "libraries" element.
# The name of the effect element is indicative, only the value of the "uuid" element
# designates the effect.
# The uuid is the implementation specific UUID as specified by the effect vendor. This is not the
# generic effect type UUID.
#    effects {
#        <fx name> {
#            library <lib name>
#            uuid <effect uuid>
#        }
#        ...
#    }

effects {
  v4a_standard_fx {
    library v4a_fx
    uuid 41d3c987-e6cf-11e3-a88a-11aba5d5c51b
  }
  
# Low freq Res 
  bassboost {
    library proxy
    uuid 10e50dc0-50bb-11e3-a9b0-0002a5d5c51b
       libsw {
        library soundalive
        uuid cf65eb39-ce2f-48a8-a903-ceb818c06745
      }
       libhw {
        library offload
        uuid 16a70d80-50bb-11e3-8959-0002a5d5c51b
      }
  }
  sec_bassboost {
    library proxy
    uuid 14804144-a5ee-4d24-aa88-0002a5d5c51b

    libsw {
      library qcbassboost
      uuid 23aca180-44bd-11e2-bcfd-0800200c9a66
    }

    libhw {
      library offload_bundle
      uuid 2c4a8c24-1581-487f-94f6-0002a5d5c51b
    }
  }
  trd_bboost {
    library proxy
    uuid 14804144-a5ee-4d24-aa88-0002a5d5c51b
 
    libsw {
      library bundle
      uuid 8631f300-72e2-11df-b57e-0002a5d5c51b
    }
 
    libhw {
      library offload_bundle
      uuid 2c4a8c24-1581-487f-94f6-0002a5d5c51b
    }
  }
# Fin

# EQ fur Sony effect
   equalizer {
    library proxy
    uuid 295b42c0-50bb-11e3-a6ed-0002a5d5c51b
       libsw {
        library clearaudio
        uuid c3f00260-e194-11df-8eb3-0002a5d5c51b
      }
       libhw {
        library offload
        uuid 16a70d80-50bb-11e3-8959-0002a5d5c51b
      }
	} 
  sec_equalizer {
    library proxy
    uuid c8e70ecd-48ca-456e-8a4f-0002a5d5c51b

    libsw {
      library bundle
      uuid ce772f20-847d-11df-bb17-0002a5d5c51b
    }

    libhw {
      library offload_bundle
      uuid a0dac280-401c-11e3-9379-0002a5d5c51b
    }
  }
# EQ End

# Virtual 
   virtualizer {
    library proxy
    uuid 1db5b180-50bb-11e3-888e-0002a5d5c51b

    libsw {
      library soundaura
      uuid cf65eb39-ce2f-48a8-a903-ceb818c06745
    }

    libhw {
      library offload
      uuid 16a70d80-50bb-11e3-8959-0002a5d5c51b
    }
  }
   sec_Vitual {
    library proxy
    uuid d3467faa-acc7-4d34-acaf-0002a5d5c51b

    libsw {
      library qcvirt
      uuid e6c98a16-22a3-11e2-b87b-f23c91aec05e
    }

    libhw {
      library offload_bundle
      uuid 509a4498-561a-4bea-b3b1-0002a5d5c51b
    }
  }
  trd_virtual {
    library proxy
    uuid  af8da7e3-2ca1-11e3-b71d-0002a5d5c51b

    libsw {
      library bundle
      	uuid 1d4033c0-8557-11df-9f2d-0002a5d5c51b
    }

    libhw {
      library offload
      uuid 16a70d80-50bb-11e3-8959-0002a5d5c51b
    }
  }
# Virtual Fin

# Rev Start
  reverb_env_aux {
    library proxy
    uuid 48404ac9-d202-4ccc-bf84-0002a5d5c51b

    libsw {
      library qcreverb
      uuid a8c1e5f3-293d-43cd-95ec-d5e26c02e217
    }

    libhw {
      library offload_bundle
      uuid 79a18026-18fd-4185-8233-0002a5d5c51b
    }
  }
  reverb_env_ins {
    library proxy
    uuid b707403a-a1c1-4291-9573-0002a5d5c51b

    libsw {
      library qcreverb
      uuid 791fff8b-8129-4655-83a4-59bc61034c3a
    }

    libhw {
      library offload_bundle
      uuid eb64ea04-973b-43d2-8f5e-0002a5d5c51b
    }
  }
  reverb_pre_aux {
    library proxy
    uuid 1b78f587-6d1c-422e-8b84-0002a5d5c51b

    libsw {
      library qcreverb
      uuid 53ef1db5-c0c0-445b-b060-e34d20ebb70a
    }

    libhw {
      library offload_bundle
      uuid 6987be09-b142-4b41-9056-0002a5d5c51b
    }
  }
  reverb_pre_ins {
    library proxy
    uuid f3e178d2-ebcb-408e-8357-0002a5d5c51b

    libsw {
      library qcreverb
      uuid b08a0e38-22a5-11e2-b87b-f23c91aec05e
    }

    libhw {
      library offload_bundle
      uuid aa2bebf6-47cf-4613-9bca-0002a5d5c51b
    }
  }
  sec_r_e_a {
    library reverb
    uuid 4a387fc0-8ab3-11df-8bad-0002a5d5c51b
  }
  sec_r_e_i {
    library reverb
    uuid c7a511a0-a3bb-11df-860e-0002a5d5c51b
  }
  sec_r_p_a {
    library reverb
    uuid f29a1400-a3bb-11df-8ddc-0002a5d5c51b
  }
  sec_r_p-i {
    library reverb
    uuid 172cdf00-a3bc-11df-a72f-0002a5d5c51b
  }
# Rev End

# Visual 
  visualizer {
    library visualizer
    uuid d069d9e0-8329-11df-9168-0002a5d5c51b
  }
# Visual End

   soundalive {
    library proxy
    uuid 05227ea0-50bb-11e3-ac69-0002a5d5c51b
       libsw {
        library soundalive_sec
        uuid cf65eb39-ce2f-48a8-a903-ceb818c06745
      }
       libhw {
        library offload
        uuid 0b2dbc60-50bb-11e3-988b-0002a5d5c51b
      }
  }

#

  hw_acc {
    library offload_bundle
    uuid 7d1580bd-297f-4683-9239-e475b6d1d69f
  }
  volume {
    library bundle
    uuid 119341a0-8469-11df-81f9-0002a5d5c51b
  }
  downmix {
    library downmix
    uuid 93f04452-e4fe-41cc-91f9-e475b6d1d69f
  }
  ibanezsevendseehx {
    library ibanezsevendseehx
    uuid 37cc2c00-dddd-11db-8577-0002a5d5c51b
  }
  loudness_enhancer {
    library loudness_enhancer
    uuid fa415329-2034-4bea-b5dc-5b381c8d1e2c
  }
  beats {
    library bass_enhancement
    uuid b3b43f60-a2f0-11e0-8b5a-0002a5d5c51b
  }
  dsp {
    library dsp
    uuid f27317f4-c984-4de6-9a90-545759495bf2
  }
  VPT51 {
    library vpt51
    uuid 447bdc20-198c-11e2-892e-0800200c9a66
  }
  Preeffect {
    library preeffect
    uuid 4aad7940-6cc7-11e1-b614-0002a5d5c51b
  }
  Posteffect {
    library posteffect
    uuid 88a4e000-7940-11e1-b247-0002a5d5c51b
  }
  xLOUD {
	library xloudwrapper
	uuid 46af9240-dd14-11df-ae36-0002a5D5c51b
  }
  lmfv {
    library output_processing
     uuid 989d9460-413d-11e1-8b0d-0002a5d5c51b
  }
  fens {
    library output_processing
     uuid cbcc5980-476d-11e1-82ee-0002a5d5c51b
  }
  spectrum {
    library spectrum
    uuid 40050b20-6999-11e0-b0d8-0002a5d5c51d
  }
  maxxaudio3 {
    library maxxaudio3
    uuid ae12da60-99ac-11df-b456-0002a5d5c51b
  }
  volume {
    library bundle
    uuid 119341a0-8469-11df-81f9-0002a5d5c51b
  }
  dirac {
    library dirac
    uuid 4c6383e0-ff7d-11e0-b6d8-0002a5d5c51b
  }
  normalizer {
    library normalizer
    uuid 1d4033c0-8557-11df-9f2d-0002a5d5c51b
  }
  huawei_pre_processing {
    library huawei_pre_processing
    uuid e707d040-6b79-11e2-b16a-0002a5d5c51b
  }
  dap {
    library dap
    uuid 9d4921da-8225-4f29-aefa-39537a041337
  }
  qcbassboost {
    library qcbassboost
    uuid 23aca180-44bd-11e2-bcfd-0800200c9a66
  }
  sonyeffect {
    library proxy
    uuid af8da7e0-2ca1-11e3-b71d-0002a5d5c51b

    libsw {
      library sonyeffect_sw
      uuid 50786e95-da76-4557-976b-7981bdf6feb9
    }

    libhw {
      library sonyeffect_hw
      uuid f9ed8ae0-1b9c-11e4-8900-0002a5d5c51b
    }
  }
  ds {
    library proxy
    uuid 9d4921da-8225-4f29-aefa-39537a04bcaa
 
    libsw {
      library ds_sw
      uuid 6ab06da4-c516-4611-8166-452799218539
    }
    libhw {
      library ds_hw
      uuid a0c30891-8246-4aef-b8ad-d53e26da0253
    }
  }
  hw_acc {
    library offload_bundle
    uuid 7d1580bd-297f-4683-9239-e475b6d1d69f
  }
  ns {
    library output_pre_processing
    uuid df0afc20-93ce-11e0-98de-0002a5d5c51b
  }
  aec {
    library output_pre_processing
    uuid d6dbf400-93ce-11e0-bcd7-0002a5d5c51b
  }
  agc {
    library output_pre_processing
    uuid 3b75f00-93ce-11e0-9fb8-0002a5d5c51b
  }
}

# additional effect from vendor
# UUID generated using version 1



# Default pre-processing effects. Add to audio_effect.conf "effects" section if
# audio HAL implements support for them.
#
#  agc {
#    library pre_processing
#    uuid aa8130e0-66fc-11e0-bad0-0002a5d5c51b
#  }
#  aec {
#    library pre_processing
#    uuid bb392ec0-8d4d-11e0-a896-0002a5d5c51b
#  }
#  ns {
#    library pre_processing
#    uuid c06c8400-8e06-11e0-9cb6-0002a5d5c51b
#  }

# Audio preprocessor configurations.
# The pre processor configuration consists in a list of elements each describing
# pre processor settings for a given input source. Valid input source names are:
# "mic", "camcorder", "voice_recognition", "voice_communication"
# Each input source element contains a list of effects elements. The name of the effect
# element must be the name of one of the effects in the "effects" list of the file.
# Each effect element may optionally contain a list of parameters and their
# default value to apply when the pre processor effect is created.
# A parameter is defined by a "param" element and a "value" element. Each of these elements
# consists in one or more elements specifying a type followed by a value.
# The types defined are: "int", "short", "float", "bool" and "string"
# When both "param" and "value" are a single int, a simple form is allowed where just
# the param and value pair is present in the parameter description
#    pre_processing {
#        <input source name> {
#            <fx name> {
#                <param 1 name> {
#                    param {
#                        int|short|float|bool|string <value>
#                        [ int|short|float|bool|string <value> ]
#                        ...
#                    }
#                    value {
#                        int|short|float|bool|string <value>
#                        [ int|short|float|bool|string <value> ]
#                        ...
#                    }
#                }
#                <param 2 name > {<param> <value>}
#                ...
#            }
#            ...
#        }
#        ...
#    }

#
# TODO: add default audio pre processor configurations after debug and tuning phase
#
